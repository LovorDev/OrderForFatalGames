Prefabs:
	MainCharacter:
		-Collider: для обнаруженяи коллизий
		-Rigidbody: для движеняи и обнаружения коллизий (заморозка осей для того чтобы не падал, Interpolate для корректного физического движения)
		-InputController: двигает персонажа
		-Character: вся логика персонажа. Максимальное количество припасов можно изменить черезщ метод SetMaxSupplies()
			-Здоровья имеет евенты (см подсказки на нем))) 
			-Основные Евенты персонажа (см подсказки)
		-BuffController: Логика подбора бафов и обновление интерфейса. Для работы евент PickUpBuff класса Character должен ссылаться на метод AddEffect
	
	House:
		-MainHouse: Есть здоровье и припасы (тоже самое что и на персонаже) Их события ссылаются на UI. Скорость убывания припасов регулируется через SetDecreaseSuppliesSpeed()
	
	SuppliesSpawner:
		-SuppliesItemSpawner
			-Точки для обозначения области спавна (не меньше двух). Область отрисовывается в гизмосе 
				на высоте самого объекта
			-Остальные поля см подсказки
			-Buffs prefab ссылки на все подбираемые бафы
	
	Supplies: Объект для спавна и подбора. количество задается через SetAmount. Размер для расположения в руках (на самом деле нужна только высота т.е. "y")

	Buffs:
		Picked: Спавняющиеся объекты. Хранит ссылку на используемый префаб и тип бафа
		Using: Объекты в которых происходит использование бафа. Есть евент о вызывании (добавил партиклы для визуализации работы). И метод UseBuff() в котором логика способности
		UI: хранят ссылку на кнопку(использование способности), текст(количсетво оставшихся способностей), тип бафа
			BuffsUI: Контролирует интерфейс способностей, поместить ссылки на UI бафов
	
	Ground: просто плейн но но со слоем Ground (нужно для корректного расположения бафов на земле)
	
	SceneWall: просто коробка коллайдеров уровня

	CharacterFollowPoint: точка колторая следует за игроком но только на указанной оси. На нее направлена камер. С помощью этого можно заставить камеру ходить только по 1 оси.

	
	
Scripts (Доп скрипты не описанные выше)
	-Ipickable (интерфейс): для вещей которые подбираются
	-Values: для изменяемых параметров с евентами (Здоровье, припасы)
	-EnemyDamagable: Вешать на врагов, с его помощью персонаж и дом получают урон
	-TextSetter: один метод в котором устанавливает строку в указанный текстбокс

	-EventsTest: Просто тестер события которого вызывают разные объекты


Алгоритм для создания новых способностей:
	1. В классе "Buff" добавить новый тип в enum BuffType
	2. Создать новый класс ИСПОЛЬЗУЕМОЙ способности, унаследовать его от UsingEffect и заимпемментировать метод UseBuff()
	 2.1. Создать из него префаб
	3. Создать новый префаб ПОДБИРАЕМОЙ способности на нем должен быть скрипт "Buff"
	 3.1. Указать в нем ссылку на префаб используемой способности и указать тип
	4. Создать новый префаб UI бафа на нем должен лежать скрипт Base UI Buff, указать все поля
	 4.1. На сцене добавить префаб внутрь BuffsUI и добавить ссылку в него
	5. В префаб SuppliesSpawner добавить префабы в список BuffsPrefab
	6. Радоваться новому бафу	
				
		